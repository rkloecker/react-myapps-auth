{"version":3,"sources":["actions/errorActions.js","actions/types.js","apiUrl.js","actions/authActions.js","components/auth/RegisterModal.js","components/auth/LoginModal.js","components/auth/Logout.js","components/AppNavbar.js","actions/appActions.js","components/AppList.js","components/AppModal.js","components/UpdateModal.js","reducers/appReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["returnErrors","msg","status","type","payload","id","arguments","length","undefined","clearErrors","API_URL","url","tokenConfig","getState","token","auth","config","headers","Content-type","RegisterModal","state","modal","name","email","password","toggle","_this","props","setState","onChange","e","Object","defineProperty","target","value","onSubmit","preventDefault","_this$state","newUser","register","prevProps","_this$props","this","error","isAuthenticated","react_default","a","createElement","NavLink","onClick","href","Modal","isOpen","ModalHeader","ModalBody","Alert","color","Form","FormGroup","Label","for","Input","placeholder","className","Button","style","marginTop","block","Component","connect","_ref","dispatch","body","JSON","stringify","axios","post","Content-Type","then","res","data","catch","err","response","LoginModal","user","login","Fragment","_ref2","Logout","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","react","logout","AppNavbar","_this$props$auth","authLinks","NavItem","concat","auth_Logout","guestLinks","auth_RegisterModal","auth_LoginModal","Navbar","dark","expand","Container","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","getapp","get","addapp","app","updateapp","put","_id","setappsLoading","AppList","onDeleteClick","deleteapp","onEditClick","getapps","_this2","_this$props$app","apps","loading","errmsg","loadingText","errorText","react_transition_group","map","title","description_long","description_short","repo_url","timeout","classNames","ListGroup","ListGroupItem","size","bind","console","log","delete","AppModal","newApp","marginBottom","UpdateModal","cancelUpdate","single_app","isUpdate","initialState","localStorage","getItem","isLoading","combineReducers","action","objectSpread","_action$payload","filter","toConsumableArray","setItem","removeItem","middleWare","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","App","es","components_AppNavbar","components_AppModal","components_UpdateModal","components_AppList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"8YAGaA,EAAe,SAACC,EAAKC,GAChC,MAAO,CACLC,KCSsB,aDRtBC,QAAS,CAAEH,MAAKC,SAAQG,GAH4BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,QAQlCG,EAAc,WACzB,MAAO,CACLN,KCEwB,iBCLbO,EAFCC,mDCmGHC,EAAc,SAAAC,GAEzB,IAAMC,EAAQD,IAAWE,KAAKD,MAGxBE,EAAS,CACbC,QAAS,CACPC,eAAgB,qBASpB,OAJIJ,IACFE,EAAOC,QAAQ,gBAAkBH,GAG5BE,GCzGHG,6MACJC,MAAQ,CACNC,OAAO,EACPC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVvB,IAAK,QA6BPwB,OAAS,WAEPC,EAAKC,MAAMlB,cACXiB,EAAKE,SAAS,CACZP,OAAQK,EAAKN,MAAMC,WAIvBQ,SAAW,SAAAC,GACTJ,EAAKE,SAALG,OAAAC,EAAA,EAAAD,CAAA,GAAiBD,EAAEG,OAAOX,KAAOQ,EAAEG,OAAOC,WAG5CC,SAAW,SAAAL,GACTA,EAAEM,iBADY,IAAAC,EAGoBX,EAAKN,MAGjCkB,EAAU,CACdhB,KAPYe,EAGNf,KAKNC,MARYc,EAGAd,MAMZC,SATYa,EAGOb,UAUrBE,EAAKC,MAAMY,SAASD,sFA5CHE,GAAW,IAAAC,EACOC,KAAKf,MAAhCgB,EADoBF,EACpBE,MAAOC,EADaH,EACbG,gBACXD,IAAUH,EAAUG,QAEL,kBAAbA,EAAMtC,GACRqC,KAAKd,SAAS,CAAE3B,IAAK0C,EAAM1C,IAAIA,MAE/ByC,KAAKd,SAAS,CAAE3B,IAAK,QAKrByC,KAAKtB,MAAMC,OACTuB,GACFF,KAAKjB,0CAkCT,OACEoB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,QAASP,KAAKjB,OAAQyB,KAAK,KAApC,YAIAL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOC,OAAQV,KAAKtB,MAAMC,MAAOI,OAAQiB,KAAKjB,QAC5CoB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAa5B,OAAQiB,KAAKjB,QAA1B,YACAoB,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACGZ,KAAKtB,MAAMnB,IACV4C,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAOC,MAAM,UAAUd,KAAKtB,MAAMnB,KAChC,KACJ4C,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMtB,SAAUO,KAAKP,UACnBU,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,IAAI,QAAX,QACAf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACE1D,KAAK,OACLmB,KAAK,OACLjB,GAAG,OACHyD,YAAY,OACZC,UAAU,OACVlC,SAAUa,KAAKb,WAGjBgB,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,IAAI,SAAX,SACAf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACE1D,KAAK,QACLmB,KAAK,QACLjB,GAAG,QACHyD,YAAY,QACZC,UAAU,OACVlC,SAAUa,KAAKb,WAGjBgB,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,IAAI,YAAX,YACAf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACE1D,KAAK,WACLmB,KAAK,WACLjB,GAAG,WACHyD,YAAY,WACZC,UAAU,OACVlC,SAAUa,KAAKb,WAEjBgB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQR,MAAM,OAAOS,MAAO,CAAEC,UAAW,QAAUC,OAAK,GAAxD,wBA3GYC,aA4HbC,cALS,SAAAjD,GAAK,MAAK,CAChCwB,gBAAiBxB,EAAML,KAAK6B,gBAC5BD,MAAOvB,EAAMuB,QAKb,CAAEJ,SDxGoB,SAAA+B,GAAA,IAAGhD,EAAHgD,EAAGhD,KAAMC,EAAT+C,EAAS/C,MAAOC,EAAhB8C,EAAgB9C,SAAhB,OAA+B,SAAA+C,GAErD,IAOMC,EAAOC,KAAKC,UAAU,CAAEpD,OAAMC,QAAOC,aAE3CmD,IACGC,KAAKlE,EAAU,QAAS8D,EAVZ,CACbvD,QAAS,CACP4D,eAAgB,sBASjBC,KAAK,SAAAC,GAAG,OACPR,EAAS,CACPpE,KF3CwB,mBE4CxBC,QAAS2E,EAAIC,SAGhBC,MAAM,SAAAC,GACLX,EACEvE,EAAakF,EAAIC,SAASH,KAAME,EAAIC,SAASjF,OAAQ,kBAEvDqE,EAAS,CACPpE,KFnDqB,sBGmIfM,eAFC4D,CAGblD,GC/HIiE,6MACJhE,MAAQ,CACNC,OAAO,EACPE,MAAO,GACPC,SAAU,GACVvB,IAAK,QA6BPwB,OAAS,WAEPC,EAAKC,MAAMlB,cACXiB,EAAKE,SAAS,CACZP,OAAQK,EAAKN,MAAMC,WAIvBQ,SAAW,SAAAC,GACTJ,EAAKE,SAALG,OAAAC,EAAA,EAAAD,CAAA,GAAiBD,EAAEG,OAAOX,KAAOQ,EAAEG,OAAOC,WAG5CC,SAAW,SAAAL,GACTA,EAAEM,iBADY,IAAAC,EAGcX,EAAKN,MAE3BiE,EAAO,CACX9D,MANYc,EAGNd,MAINC,SAPYa,EAGCb,UAQfE,EAAKC,MAAM2D,MAAMD,sFA1CA7C,GAAW,IAAAC,EACOC,KAAKf,MAAhCgB,EADoBF,EACpBE,MAAOC,EADaH,EACbG,gBACXD,IAAUH,EAAUG,QAEL,eAAbA,EAAMtC,GACRqC,KAAKd,SAAS,CAAE3B,IAAK0C,EAAM1C,IAAIA,MAE/ByC,KAAKd,SAAS,CAAE3B,IAAK,QAKrByC,KAAKtB,MAAMC,OACTuB,GACFF,KAAKjB,0CAgCT,OACEoB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyC,SAAA,KACE1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,QAASP,KAAKjB,OAAQyB,KAAK,KAApC,SAIAL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOC,OAAQV,KAAKtB,MAAMC,MAAOI,OAAQiB,KAAKjB,QAC5CoB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAa5B,OAAQiB,KAAKjB,QAA1B,SACAoB,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACGZ,KAAKtB,MAAMnB,IACV4C,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAOC,MAAM,UAAUd,KAAKtB,MAAMnB,KAChC,KACJ4C,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMtB,SAAUO,KAAKP,UACnBU,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,IAAI,SAAX,SACAf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACE1D,KAAK,QACLmB,KAAK,QACLjB,GAAG,QACHyD,YAAY,QACZC,UAAU,OACVlC,SAAUa,KAAKb,WAGjBgB,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,IAAI,YAAX,YACAf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACE1D,KAAK,WACLmB,KAAK,WACLjB,GAAG,WACHyD,YAAY,WACZC,UAAU,OACVlC,SAAUa,KAAKb,WAEjBgB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQR,MAAM,OAAOS,MAAO,CAAEC,UAAW,QAAUC,OAAK,GAAxD,qBA9FSC,aA+GVC,cALS,SAAAjD,GAAK,MAAK,CAChCwB,gBAAiBxB,EAAML,KAAK6B,gBAC5BD,MAAOvB,EAAMuB,QAKb,CAAE2C,MF7DiB,SAAAE,GAAA,IAAGjE,EAAHiE,EAAGjE,MAAOC,EAAVgE,EAAUhE,SAAV,OAAyB,SAAA+C,GAE5C,IAOMC,EAAOC,KAAKC,UAAU,CAAEnD,QAAOC,aAErCmD,IACGC,KAAKlE,EAAU,OAAQ8D,EAVX,CACbvD,QAAS,CACP4D,eAAgB,sBASjBC,KAAK,SAAAC,GAAG,OACPR,EAAS,CACPpE,KF5EqB,gBE6ErBC,QAAS2E,EAAIC,SAGhBC,MAAM,SAAAC,GACLX,EACEvE,EAAakF,EAAIC,SAASH,KAAME,EAAIC,SAASjF,OAAQ,eAEvDqE,EAAS,CACPpE,KFpFkB,mBIyHfM,eAFI4D,CAGbe,GC9HWK,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA1D,OAAA4D,EAAA,EAAA5D,CAAAW,KAAA+C,GAAA1D,OAAA6D,EAAA,EAAA7D,CAAAW,KAAAX,OAAA8D,EAAA,EAAA9D,CAAA0D,GAAAK,MAAApD,KAAApC,YAAA,OAAAyB,OAAAgE,EAAA,EAAAhE,CAAA0D,EAAAC,GAAA3D,OAAAiE,EAAA,EAAAjE,CAAA0D,EAAA,EAAAQ,IAAA,SAAA/D,MAAA,WAMI,OACEW,EAAAC,EAAAC,cAACmD,EAAA,SAAD,KACErD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,QAASP,KAAKf,MAAMwE,OAAQjD,KAAK,KAA1C,eARRuC,EAAA,CAA4BrB,aAgBbC,cACb,KACA,CAAE8B,OH4EkB,WACpB,MAAO,CACLhG,KF3F0B,oBKWfkE,CAGboB,GCRIW,6MACJhF,MAAQ,CACNgC,QAAQ,KAOV3B,OAAS,WACPC,EAAKE,SAAS,CACZwB,QAAS1B,EAAKN,MAAMgC,kFAIf,IAAAiD,EAC2B3D,KAAKf,MAAMZ,KAArC6B,EADDyD,EACCzD,gBAAiByC,EADlBgB,EACkBhB,KAEnBiB,EACJzD,EAAAC,EAAAC,cAACmD,EAAA,SAAD,KACErD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,KACE1D,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,oBACdlB,EAAAC,EAAAC,cAAA,cAASsC,EAAI,WAAAmB,OAAcnB,EAAK/D,MAAS,MAG7CuB,EAAAC,EAAAC,cAACwD,EAAA,EAAD,KACE1D,EAAAC,EAAAC,cAAC0D,EAAD,QAKAC,EACJ7D,EAAAC,EAAAC,cAACmD,EAAA,SAAD,KACErD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,KACE1D,EAAAC,EAAAC,cAAC4D,EAAD,OAEF9D,EAAAC,EAAAC,cAACwD,EAAA,EAAD,KACE1D,EAAAC,EAAAC,cAAC6D,EAAD,QAKN,OACE/D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAQrD,MAAM,OAAOsD,MAAI,EAACC,OAAO,KAAKhD,UAAU,QAC9ClB,EAAAC,EAAAC,cAACiE,EAAA,EAAD,KACEnE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAa/D,KAAK,KAAlB,mBACAL,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAejE,QAASP,KAAKjB,SAC7BoB,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAU/D,OAAQV,KAAKtB,MAAMgC,OAAQgE,QAAM,GACzCvE,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAKtD,UAAU,UAAUqD,QAAM,GAC5BxE,EAAkB0D,EAAYI,cAlDvBtC,aAgETC,cAJS,SAAAjD,GAAK,MAAK,CAChCL,KAAMK,EAAML,OAKZ,KAFasD,CAGb+B,4BC7CWkB,EAAS,SAAAjH,GAAE,OAAI,SAAAkE,GAC1BI,IACG4C,IADH,GAAAf,OACU9F,EADV,SAAA8F,OACyBnG,IACtByE,KAAK,SAAAC,GACAA,EAAIC,KACNT,EAAS,CACPpE,KP5Ca,UO6CbC,QAAS2E,EAAIC,OAGfT,EAAS,CACPpE,KPlCe,YOmCfC,QAAS,+BAId6E,MAAM,SAAAC,GACDA,EAAIC,UACNZ,EAASvE,EAAakF,EAAIC,SAASH,KAAME,EAAIC,SAASjF,aAIjDsH,EAAS,SAAAC,GAAG,OAAI,SAAClD,EAAU1D,GACtC8D,IACGC,KADH,GAAA4B,OACW9F,EADX,QAC0B+G,EAAK7G,EAAYC,IACxCiE,KAAK,SAAAC,GAAG,OACPR,EAAS,CACPpE,KPhEe,UOiEfC,QAAS2E,EAAIC,SAGhBC,MAAM,SAAAC,GACDA,EAAIC,UACNZ,EAASvE,EAAakF,EAAIC,SAASH,KAAME,EAAIC,SAASjF,aAIjDwH,EAAY,SAAAD,GAAG,OAAI,SAAClD,EAAU1D,GACzC8D,IACGgD,IADH,GAAAnB,OACU9F,EADV,SAAA8F,OACyBiB,EAAIG,KAAOH,EAAK7G,EAAYC,IAClDiE,KAAK,SAAAC,GAAG,OACPR,EAAS,CACPpE,KP9EkB,aO+ElBC,QAAS2E,EAAIC,SAGhBC,MAAM,SAAAC,GACDA,EAAIC,UACNZ,EAASvE,EAAakF,EAAIC,SAASH,KAAME,EAAIC,SAASjF,aAmBjD2H,EAAiB,WAC5B,MAAO,CACL1H,KPvGwB,iBQEtB2H,6MAWJC,cAAgB,SAAA1H,GACdqB,EAAKC,MAAMqG,UAAU3H,MAGvB4H,YAAc,SAAA5H,GACZqB,EAAKC,MAAM2F,OAAOjH,uFARlBqC,KAAKf,MAAMuG,2CAWJ,IAAAC,EAAAzF,KAAA0F,EAC2B1F,KAAKf,MAAM8F,IAArCY,EADDD,EACCC,KAAMC,EADPF,EACOE,QAASC,EADhBH,EACgBG,OACjBC,EAAc3F,EAAAC,EAAAC,cAAA,+BACd0F,EAAY5F,EAAAC,EAAAC,cAAA,SAAIwF,GAEtB,OACE1F,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyC,SAAA,KACG+C,EAAUE,EAAc,GACxBD,EAASE,EAAY,GACtB5F,EAAAC,EAAAC,cAAC2F,EAAA,gBAAD,CAAiB3E,UAAU,IACxBsE,EAAKM,IACJ,SAAArE,GAAA,IACEsD,EADFtD,EACEsD,IACAgB,EAFFtE,EAEEsE,MACAC,EAHFvE,EAGEuE,iBACAC,EAJFxE,EAIEwE,kBACAnI,EALF2D,EAKE3D,IACAoI,EANFzE,EAMEyE,SANF,OAQElG,EAAAC,EAAAC,cAAC2F,EAAA,cAAD,CAAezC,IAAK2B,EAAKoB,QAAS,IAAKC,WAAW,QAChDpG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAWnF,UAAU,QACnBlB,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAepF,UAAU,kCACtB6E,EAAO,IACPT,EAAKxG,MAAMiB,gBACVC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyC,SAAA,KACE1C,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACED,UAAU,yBACVP,MAAM,SACN4F,KAAK,KACLnG,QAASkF,EAAKJ,cAAcsB,KAAKlB,EAAMP,IAJzC,UAQA/E,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACED,UAAU,yBACVP,MAAM,UACN4F,KAAK,KACLnG,QAASkF,EAAKF,YAAYoB,KAAKlB,EAAMP,IAJvC,WASA,MAEN/E,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAepF,UAAU,2BACtB+E,GAEHjG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAepF,UAAU,2BACtB8E,GAEHhG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAepF,UAAU,2BACtBgF,GAEHlG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAepF,UAAU,2BACtBpD,gBAzECyD,aA0FPC,cALS,SAAAjD,GAAK,MAAK,CAChCqG,IAAKrG,EAAMqG,IACX7E,gBAAiBxB,EAAML,KAAK6B,kBAK5B,CAAEsF,QDpFmB,kBAAM,SAAA3D,GAC3BA,EAASsD,KACTlD,IACG4C,IADH,GAAAf,OACU9F,EADV,SAEGoE,KAAK,SAAAC,GACJuE,QAAQC,IAAI,oCACRxE,EAAIC,MACNT,EAAS,CACPpE,KPvBc,WOwBdC,QAAS2E,EAAIC,SAIlBC,MAAM,SAAAC,GACLoE,QAAQC,IAAI,yCACZhF,EAAS,CACPpE,KPfiB,YOgBjBC,QAAS,gCAEP8E,EAAIC,UACNZ,EAASvE,EAAakF,EAAIC,SAASH,KAAME,EAAIC,SAASjF,aCgEjD8H,UDRY,SAAA3H,GAAE,OAAI,SAACkE,EAAU1D,GACxC8D,IACG6E,OADH,GAAAhD,OACa9F,EADb,SAAA8F,OAC4BnG,GAAMO,EAAYC,IAC3CiE,KAAK,SAAAC,GAAG,OACPR,EAAS,CACPpE,KP5FkB,aO6FlBC,QAASC,MAGZ4E,MAAM,SAAAC,GACDA,EAAIC,UACNZ,EAASvE,EAAakF,EAAIC,SAASH,KAAME,EAAIC,SAASjF,aCHtCwH,YAAWJ,UAFpBjD,CAGbyD,GCrFI2B,8MACJrI,MAAQ,CACNC,OAAO,EACPC,KAAM,GACNsH,MAAO,GACPC,iBAAkB,GAClBC,kBAAmB,GACnBnI,IAAK,GACLoI,SAAU,MAOZtH,OAAS,WACPC,EAAKE,SAAS,CACZP,OAAQK,EAAKN,MAAMC,WAIvBQ,SAAW,SAAAC,GACTJ,EAAKE,SAALG,OAAAC,EAAA,EAAAD,CAAA,GAAiBD,EAAEG,OAAOX,KAAOQ,EAAEG,OAAOC,WAG5CC,SAAW,SAAAL,GACTA,EAAEM,iBAEF,IAAMsH,EAAS,CACbd,MAAOlH,EAAKN,MAAMwH,MAClBC,iBAAkBnH,EAAKN,MAAMyH,iBAC7BC,kBAAmBpH,EAAKN,MAAM0H,kBAC9BnI,IAAKe,EAAKN,MAAMT,IAChBoI,SAAUrH,EAAKN,MAAM2H,UAIvBrH,EAAKC,MAAM6F,OAAOkC,GAGlBhI,EAAKD,kFAKL,OACEoB,EAAAC,EAAAC,cAAA,WACGL,KAAKf,MAAMiB,gBACVC,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACER,MAAM,OACNS,MAAO,CAAE0F,aAAc,QACvB1G,QAASP,KAAKjB,QAHhB,WAQAoB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,QAAd,2CAGFlB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOC,OAAQV,KAAKtB,MAAMC,MAAOI,OAAQiB,KAAKjB,QAC5CoB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEU,UAAU,iCACVtC,OAAQiB,KAAKjB,QAFf,mBAMAoB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWS,UAAU,aACnBlB,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMtB,SAAUO,KAAKP,UACnBU,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,IAAI,SAAX,SACAf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACE1D,KAAK,OACLmB,KAAK,QACLjB,GAAG,QACHyD,YAAY,YACZjC,SAAUa,KAAKb,WAEjBgB,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,IAAI,oBAAX,eACAf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACE1D,KAAK,OACLmB,KAAK,mBACLjB,GAAG,mBACHyD,YAAY,uBACZjC,SAAUa,KAAKb,WAEjBgB,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,IAAI,qBAAX,qBACAf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACE1D,KAAK,OACLmB,KAAK,oBACLjB,GAAG,oBACHyD,YAAY,wBACZjC,SAAUa,KAAKb,WAEjBgB,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,IAAI,OAAX,kBACAf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACE1D,KAAK,OACLmB,KAAK,MACLjB,GAAG,MACHyD,YAAY,UACZjC,SAAUa,KAAKb,WAEjBgB,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,IAAI,YAAX,YACAf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACE1D,KAAK,OACLmB,KAAK,WACLjB,GAAG,WACHyD,YAAY,eACZjC,SAAUa,KAAKb,WAEjBgB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQR,MAAM,UAAUS,MAAO,CAAEC,UAAW,QAAUC,OAAK,GAA3D,uBA7GOC,aA8HRC,eALS,SAAAjD,GAAK,MAAK,CAChCqG,IAAKrG,EAAMqG,IACX7E,gBAAiBxB,EAAML,KAAK6B,kBAK5B,CAAE4E,UAFWnD,CAGboF,ICjIIG,8MACJxI,MAAQ,CACNC,OAAO,EACPuG,IAAK,GACLgB,MAAO,GACPC,iBAAkB,GAClBC,kBAAmB,GACnBnI,IAAK,GACLoI,SAAU,MASZtH,OAAS,WAEPC,EAAKC,MAAMkI,eACXnI,EAAKE,SAAS,CACZP,OAAQK,EAAKN,MAAMC,WAIvBQ,SAAW,SAAAC,GACTJ,EAAKE,SAALG,OAAAC,EAAA,EAAAD,CAAA,GAAiBD,EAAEG,OAAOX,KAAOQ,EAAEG,OAAOC,WAG5CC,SAAW,SAAAL,GACTA,EAAEM,iBAEF,IAAMsH,EAAS,CACb9B,IAAKlG,EAAKC,MAAM8F,IAAIqC,WAAWlC,IAC/BgB,MAAOlH,EAAKN,MAAMwH,MAClBC,iBAAkBnH,EAAKN,MAAMyH,iBAC7BC,kBAAmBpH,EAAKN,MAAM0H,kBAC9BnI,IAAKe,EAAKN,MAAMT,IAChBoI,SAAUrH,EAAKN,MAAM2H,UAIvBrH,EAAKC,MAAM+F,UAAUgC,GAErBJ,QAAQC,IAAI7H,EAAKC,MAAM8F,IAAIsC,UAG3BrI,EAAKD,4FAGYe,GAIfE,KAAKf,MAAM8F,IAAIsC,UACfrH,KAAKf,MAAM8F,IAAIsC,WAAavH,EAAUiF,IAAIsC,UAG1CrH,KAAKd,SAAS,CACZgG,IAAKlF,KAAKf,MAAM8F,IAAIqC,WAAWlC,IAC/BgB,MAAOlG,KAAKf,MAAM8F,IAAIqC,WAAWlB,MACjCC,iBAAkBnG,KAAKf,MAAM8F,IAAIqC,WAAWjB,iBAC5CC,kBAAmBpG,KAAKf,MAAM8F,IAAIqC,WAAWhB,kBAC7CnI,IAAK+B,KAAKf,MAAM8F,IAAIqC,WAAWnJ,IAC/BoI,SAAUrG,KAAKf,MAAM8F,IAAIqC,WAAWf,SACpC1H,MAAOqB,KAAKf,MAAM8F,IAAIsC,4CAM1B,OAAIrH,KAAKf,MAAM8F,IAAIsC,SAGflH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOC,OAAQV,KAAKtB,MAAMC,MAAOI,OAAQiB,KAAKjB,QAC5CoB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAa5B,OAAQiB,KAAKjB,QAA1B,cACAoB,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMtB,SAAUO,KAAKP,UACnBU,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,IAAI,SAAX,SACAf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACE1D,KAAK,OACLmB,KAAK,QACLjB,GAAG,QACH6B,MAAOQ,KAAKtB,MAAMwH,MAClB/G,SAAUa,KAAKb,WAEjBgB,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,IAAI,oBAAX,SACAf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACE1D,KAAK,OACLmB,KAAK,mBACLjB,GAAG,mBACH6B,MAAOQ,KAAKtB,MAAMyH,iBAClBhH,SAAUa,KAAKb,WAEjBgB,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,IAAI,qBAAX,SACAf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACE1D,KAAK,OACLmB,KAAK,oBACLjB,GAAG,oBACH6B,MAAOQ,KAAKtB,MAAM0H,kBAClBjH,SAAUa,KAAKb,WAEjBgB,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,IAAI,OAAX,SACAf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACE1D,KAAK,OACLmB,KAAK,MACLjB,GAAG,MACH6B,MAAOQ,KAAKtB,MAAMT,IAClBkB,SAAUa,KAAKb,WAEjBgB,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,IAAI,YAAX,SACAf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACE1D,KAAK,OACLmB,KAAK,WACLjB,GAAG,WACH6B,MAAOQ,KAAKtB,MAAM2H,SAClBlH,SAAUa,KAAKb,WAEjBgB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQR,MAAM,UAAUS,MAAO,CAAEC,UAAW,QAAUC,OAAK,GAA3D,mBASA,YAjIQC,aA2IXC,eANS,SAAAjD,GAAK,MAAK,CAChCqG,IAAKrG,EAAMqG,IACXqC,WAAY1I,EAAMqG,IAAIqC,WACtBlH,gBAAiBxB,EAAML,KAAK6B,kBAK5B,CAAE4E,SAAQE,YAAWJ,SAAQuC,aH5CH,WAC1B,MAAO,CACL1J,KPjGyB,mBUyIdkE,CAGbuF,wCClJII,GAAe,CACnB3B,KAAM,GACNC,SAAS,EACTwB,WAAY,KACZC,UAAU,EACVxB,OAAQ,ICdJyB,GAAe,CACnB/J,IAAK,GACLC,OAAQ,KACRG,GAAI,MCMA2J,GAAe,CACnBlJ,MAAOmJ,aAAaC,QAAQ,SAC5BtH,gBAAiB,KACjBuH,WAAW,EACX9E,KAAM,MCVO+E,gBAAgB,CAC7B3C,IHaa,WAAuC,IAA9BrG,EAA8Bd,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB0J,GAAcK,EAAQ/J,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAQ6J,EAAOlK,MACb,IXrBoB,WWuBlB,OAAO4B,OAAAuI,GAAA,EAAAvI,CAAA,GACFX,EADL,CAEEiH,KAAMgC,EAAOjK,QACbkI,SAAS,IAEb,IX3BmB,UW6BjB,OAAOvG,OAAAuI,GAAA,EAAAvI,CAAA,GACFX,EADL,CAEE0I,WAAYO,EAAOjK,QACnB2J,UAAU,IAGd,IXjCsB,aWkCpB,OAAOhI,OAAAuI,GAAA,EAAAvI,CAAA,GACFX,EADL,CAEEiH,KAAMjH,EAAMiH,KAAKM,IAAI,SAAAlB,GAAO,IAAA8C,EAQtBF,EAAOjK,QANTwH,EAFwB2C,EAExB3C,IACAgB,EAHwB2B,EAGxB3B,MACAC,EAJwB0B,EAIxB1B,iBACAC,EALwByB,EAKxBzB,kBACAnI,EANwB4J,EAMxB5J,IACAoI,EAPwBwB,EAOxBxB,SASF,OAPItB,EAAIG,MAAQA,IACdH,EAAImB,MAAQA,EACZnB,EAAIoB,iBAAmBA,EACvBpB,EAAIqB,kBAAoBA,EACxBrB,EAAI9G,IAAMA,EACV8G,EAAIsB,SAAWA,GAEVtB,IAETsC,UAAU,IAEd,IXvDsB,aWwDpB,OAAOhI,OAAAuI,GAAA,EAAAvI,CAAA,GACFX,EADL,CAEEiH,KAAMjH,EAAMiH,KAAKmC,OAAO,SAAA/C,GAAG,OAAIA,EAAIG,MAAQyC,EAAOjK,YAEtD,IX9DmB,UW+DjB,OAAO2B,OAAAuI,GAAA,EAAAvI,CAAA,GACFX,EADL,CAEEiH,KAAI,CAAGgC,EAAOjK,SAAVoG,OAAAzE,OAAA0I,GAAA,EAAA1I,CAAsBX,EAAMiH,SAEpC,IXhEwB,eWiEtB,OAAOtG,OAAAuI,GAAA,EAAAvI,CAAA,GACFX,EADL,CAEEkH,SAAS,IAEb,IXzDyB,gBW0DvB,OAAOvG,OAAAuI,GAAA,EAAAvI,CAAA,GACFX,EADL,CAEE2I,UAAU,IAEd,IX/DqB,YWkEnB,OAAOhI,OAAAuI,GAAA,EAAAvI,CAAA,GACFX,EADL,CAEEmH,OAAQ8B,EAAOjK,UAEnB,QACE,OAAOgB,IGhFXuB,MFCa,WAAuC,IAA9BvB,EAA8Bd,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB0J,GAAcK,EAAQ/J,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAO6J,EAAOlK,MACZ,IZIsB,aYHpB,MAAO,CACLF,IAAKoK,EAAOjK,QAAQH,IACpBC,OAAQmK,EAAOjK,QAAQF,OACvBG,GAAIgK,EAAOjK,QAAQC,IAEvB,IZDwB,eYEtB,MAAO,CACLJ,IAAK,GACLC,OAAQ,KACRG,GAAI,MAER,QACE,OAAOe,IEfXL,KDUa,WAAuC,IAA9BK,EAA8Bd,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB0J,GAAcK,EAAQ/J,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAQ6J,EAAOlK,MACb,IbdwB,eaetB,OAAO4B,OAAAuI,GAAA,EAAAvI,CAAA,GACFX,EADL,CAEE+I,WAAW,IAEf,IblBuB,camBrB,OAAOpI,OAAAuI,GAAA,EAAAvI,CAAA,GACFX,EADL,CAEEwB,iBAAiB,EACjBuH,WAAW,EACX9E,KAAMgF,EAAOjK,UAEjB,IbvByB,gBawBzB,IbrB4B,mBauB1B,OADA6J,aAAaS,QAAQ,QAASL,EAAOjK,QAAQU,OACtCiB,OAAAuI,GAAA,EAAAvI,CAAA,GACFX,EACAiJ,EAAOjK,QAFZ,CAGEwC,iBAAiB,EACjBuH,WAAW,IAEf,IbjCsB,aakCtB,IbhCsB,aaiCtB,IbhC0B,iBaiC1B,Ib/ByB,gBaiCvB,OADAF,aAAaU,WAAW,SACjB5I,OAAAuI,GAAA,EAAAvI,CAAA,GACFX,EADL,CAEEN,MAAO,KACPuE,KAAM,KACNzC,iBAAiB,EACjBuH,WAAW,IAEf,QACE,OAAO/I,MEhDPwJ,GAAa,CAACC,MAEdC,GAAmBC,OAAOC,sCAAwCC,KAOzDC,GANDC,aACZC,GANmB,GAQnBN,GAAiBO,KAAevF,WAAf,EAAmB8E,MCuBvBU,4MAnBXJ,GAAM3G,SdAoB,SAACA,EAAU1D,GAEvC0D,EAAS,CAAEpE,KFZe,iBEc1BwE,IACG4C,IAAI7G,EAAU,YAAaE,EAAYC,IACvCiE,KAAK,SAAAC,GAAG,OACPR,EAAS,CACPpE,KFjBmB,cEkBnBC,QAAS2E,EAAIC,SAGhBC,MAAM,SAAAC,GAECA,EAAIC,UACNZ,EAASvE,EAAakF,EAAIC,SAASH,KAAME,EAAIC,SAASjF,SAE1DqE,EAAS,CACPpE,KF1BkB,oDgBYtB,OACE0C,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAUL,MAAOA,IACfrI,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,OACblB,EAAAC,EAAAC,cAACyI,EAAD,MACA3I,EAAAC,EAAAC,cAACiE,EAAA,EAAD,KACEnE,EAAAC,EAAAC,cAAC0I,GAAD,MACA5I,EAAAC,EAAAC,cAAC2I,GAAD,MACA7I,EAAAC,EAAAC,cAAC4I,EAAD,gBAbMvH,cCVlBwH,IAASC,OAAOhJ,EAAAC,EAAAC,cAAC+I,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.54c43241.chunk.js","sourcesContent":["import { GET_ERRORS, CLEAR_ERRORS } from './types';\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status, id = null) => {\n  return {\n    type: GET_ERRORS,\n    payload: { msg, status, id }\n  };\n};\n\n// CLEAR ERRORS\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};\n","export const GET_APPS = \"GET_APPS\";\nexport const GET_APP = \"GET_APP\";\nexport const ADD_APP = \"ADD_APP\";\nexport const UPDATE_APP = \"UPDATE_APP\";\nexport const DELETE_APP = \"DELETE_APP\";\nexport const APPS_LOADING = \"APPS_LOADING\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\nexport const GET_ERROR = \"GET_ERROR\";\nexport const CANCEL_UPDATE = \"CANCEL_UPDATE\";\n","// Api Endpoints\r\n\r\nconst Localurl = \"http://localhost:4000\";\r\nconst deployUrl = \"https://sheltered-eyrie-53167.herokuapp.com\";\r\n\r\n// switch between production and local testing url\r\nconst url = deployUrl;\r\n\r\nconst API_URL = url + \"/api/\";\r\n\r\nexport default API_URL;\r\n","import axios from \"axios\";\nimport { returnErrors } from \"./errorActions\";\nimport API_URL from \"../apiUrl\";\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from \"./types\";\n\n// Check token & load user\nexport const loadUser = () => (dispatch, getState) => {\n  // User loading\n  dispatch({ type: USER_LOADING });\n\n  axios\n    .get(API_URL + \"auth/user\", tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      {\n        if (err.response)\n          dispatch(returnErrors(err.response.data, err.response.status));\n      }\n      dispatch({\n        type: AUTH_ERROR\n      });\n    });\n};\n\n// Register User\nexport const register = ({ name, email, password }) => dispatch => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ name, email, password });\n\n  axios\n    .post(API_URL + \"users\", body, config)\n    .then(res =>\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, \"REGISTER_FAIL\")\n      );\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    });\n};\n\n// Login User\nexport const login = ({ email, password }) => dispatch => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password });\n\n  axios\n    .post(API_URL + \"auth\", body, config)\n    .then(res =>\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, \"LOGIN_FAIL\")\n      );\n      dispatch({\n        type: LOGIN_FAIL\n      });\n    });\n};\n\n// Logout User\nexport const logout = () => {\n  return {\n    type: LOGOUT_SUCCESS\n  };\n};\n\n// Setup config/headers and token\nexport const tokenConfig = getState => {\n  // Get token from localstorage\n  const token = getState().auth.token;\n\n  // Headers\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  };\n\n  // If token, add to headers\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n\n  return config;\n};\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  NavLink,\n  Alert\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { register } from \"../../actions/authActions\";\nimport { clearErrors } from \"../../actions/errorActions\";\n\nclass RegisterModal extends Component {\n  state = {\n    modal: false,\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    msg: null\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    register: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === \"REGISTER_FAIL\") {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n\n    // If authenticated, close modal\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggle();\n      }\n    }\n  }\n\n  toggle = () => {\n    // Clear errors\n    this.props.clearErrors();\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { name, email, password } = this.state;\n\n    // Create user object\n    const newUser = {\n      name,\n      email,\n      password\n    };\n\n    // Attempt to register\n    this.props.register(newUser);\n  };\n\n  render() {\n    return (\n      <div>\n        <NavLink onClick={this.toggle} href=\"#\">\n          Register\n        </NavLink>\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Register</ModalHeader>\n          <ModalBody>\n            {this.state.msg ? (\n              <Alert color=\"danger\">{this.state.msg}</Alert>\n            ) : null}\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n                <Label for=\"name\">Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"Name\"\n                  className=\"mb-2\"\n                  onChange={this.onChange}\n                />\n\n                <Label for=\"email\">Email</Label>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  placeholder=\"Email\"\n                  className=\"mb-2\"\n                  onChange={this.onChange}\n                />\n\n                <Label for=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  className=\"mb-3\"\n                  onChange={this.onChange}\n                />\n                <Button color=\"dark\" style={{ marginTop: \"2rem\" }} block>\n                  Register\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(\n  mapStateToProps,\n  { register, clearErrors }\n)(RegisterModal);\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  NavLink,\n  Alert\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login } from \"../../actions/authActions\";\nimport { clearErrors } from \"../../actions/errorActions\";\n\nclass LoginModal extends Component {\n  state = {\n    modal: false,\n    email: \"\",\n    password: \"\",\n    msg: null\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    login: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === \"LOGIN_FAIL\") {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n\n    // If authenticated, close modal\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggle();\n      }\n    }\n  }\n\n  toggle = () => {\n    // Clear errors\n    this.props.clearErrors();\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { email, password } = this.state;\n\n    const user = {\n      email,\n      password\n    };\n\n    // Attempt to login\n    this.props.login(user);\n  };\n\n  render() {\n    return (\n      <>\n        <NavLink onClick={this.toggle} href=\"#\">\n          Login\n        </NavLink>\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Login</ModalHeader>\n          <ModalBody>\n            {this.state.msg ? (\n              <Alert color=\"danger\">{this.state.msg}</Alert>\n            ) : null}\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n                <Label for=\"email\">Email</Label>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  placeholder=\"Email\"\n                  className=\"mb-2\"\n                  onChange={this.onChange}\n                />\n\n                <Label for=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  className=\"mb-2\"\n                  onChange={this.onChange}\n                />\n                <Button color=\"dark\" style={{ marginTop: \"2rem\" }} block>\n                  Login\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(\n  mapStateToProps,\n  { login, clearErrors }\n)(LoginModal);\n","import React, { Component, Fragment } from 'react';\nimport { NavLink } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/authActions';\nimport PropTypes from 'prop-types';\n\nexport class Logout extends Component {\n  static propTypes = {\n    logout: PropTypes.func.isRequired\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <NavLink onClick={this.props.logout} href='#'>\n          Logout\n        </NavLink>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { logout }\n)(Logout);\n","import React, { Component, Fragment } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Container\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport RegisterModal from \"./auth/RegisterModal\";\nimport LoginModal from \"./auth/LoginModal\";\nimport Logout from \"./auth/Logout\";\n\nclass AppNavbar extends Component {\n  state = {\n    isOpen: false\n  };\n\n  static propTypes = {\n    auth: PropTypes.object.isRequired\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  render() {\n    const { isAuthenticated, user } = this.props.auth;\n\n    const authLinks = (\n      <Fragment>\n        <NavItem>\n          <span className=\"navbar-text mr-3\">\n            <strong>{user ? `Welcome ${user.name}` : \"\"}</strong>\n          </span>\n        </NavItem>\n        <NavItem>\n          <Logout />\n        </NavItem>\n      </Fragment>\n    );\n\n    const guestLinks = (\n      <Fragment>\n        <NavItem>\n          <RegisterModal />\n        </NavItem>\n        <NavItem>\n          <LoginModal />\n        </NavItem>\n      </Fragment>\n    );\n\n    return (\n      <div>\n        <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\n          <Container>\n            <NavbarBrand href=\"/\">List of my apps</NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                {isAuthenticated ? authLinks : guestLinks}\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AppNavbar);\n","import axios from \"axios\";\nimport {\n  GET_APPS,\n  UPDATE_APP,\n  GET_APP,\n  ADD_APP,\n  DELETE_APP,\n  APPS_LOADING,\n  GET_ERROR,\n  CANCEL_UPDATE\n} from \"./types\";\nimport { tokenConfig } from \"./authActions\";\nimport { returnErrors } from \"./errorActions\";\nimport API_URL from \"../apiUrl\";\n\nexport const getapps = () => dispatch => {\n  dispatch(setappsLoading());\n  axios\n    .get(`${API_URL}apps`)\n    .then(res => {\n      console.log(\"get apps was called successfully\");\n      if (res.data) {\n        dispatch({\n          type: GET_APPS,\n          payload: res.data\n        });\n      }\n    })\n    .catch(err => {\n      console.log(\"get apps was called unsuccessfully!!!\");\n      dispatch({\n        type: GET_ERROR,\n        payload: \"could not load apps from db\"\n      });\n      if (err.response)\n        dispatch(returnErrors(err.response.data, err.response.status));\n    });\n};\n\nexport const getapp = id => dispatch => {\n  axios\n    .get(`${API_URL}apps/${id}`)\n    .then(res => {\n      if (res.data) {\n        dispatch({\n          type: GET_APP,\n          payload: res.data\n        });\n      } else {\n        dispatch({\n          type: GET_ERROR,\n          payload: \"could not get single app\"\n        });\n      }\n    })\n    .catch(err => {\n      if (err.response)\n        dispatch(returnErrors(err.response.data, err.response.status));\n    });\n};\n\nexport const addapp = app => (dispatch, getState) => {\n  axios\n    .post(`${API_URL}apps`, app, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: ADD_APP,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      if (err.response)\n        dispatch(returnErrors(err.response.data, err.response.status));\n    });\n};\n\nexport const updateapp = app => (dispatch, getState) => {\n  axios\n    .put(`${API_URL}apps/${app._id}`, app, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: UPDATE_APP,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      if (err.response)\n        dispatch(returnErrors(err.response.data, err.response.status));\n    });\n};\n\nexport const deleteapp = id => (dispatch, getState) => {\n  axios\n    .delete(`${API_URL}apps/${id}`, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: DELETE_APP,\n        payload: id\n      })\n    )\n    .catch(err => {\n      if (err.response)\n        dispatch(returnErrors(err.response.data, err.response.status));\n    });\n};\n\nexport const setappsLoading = () => {\n  return {\n    type: APPS_LOADING\n  };\n};\n\nexport const cancelUpdate = () => {\n  return {\n    type: CANCEL_UPDATE\n  };\n};\n","import React, { Component, Fragment } from \"react\";\nimport { Container, ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport { getapps, getapp, deleteapp, updateapp } from \"../actions/appActions\";\nimport PropTypes from \"prop-types\";\n\nclass AppList extends Component {\n  static propTypes = {\n    getapps: PropTypes.func.isRequired,\n    app: PropTypes.object.isRequired,\n    isAuthenticated: PropTypes.bool\n  };\n\n  componentDidMount() {\n    this.props.getapps();\n  }\n\n  onDeleteClick = id => {\n    this.props.deleteapp(id);\n  };\n\n  onEditClick = id => {\n    this.props.getapp(id);\n  };\n\n  render() {\n    const { apps, loading, errmsg } = this.props.app;\n    const loadingText = <p>... app is loading</p>;\n    const errorText = <p>{errmsg}</p>;\n    // console.log(apps);\n    return (\n      <>\n        {loading ? loadingText : \"\"}\n        {errmsg ? errorText : \"\"}\n        <TransitionGroup className=\"\">\n          {apps.map(\n            ({\n              _id,\n              title,\n              description_long,\n              description_short,\n              url,\n              repo_url\n            }) => (\n              <CSSTransition key={_id} timeout={300} classNames=\"fade\">\n                <ListGroup className=\"mb-2\">\n                  <ListGroupItem className=\"text-white text-center bg-dark\">\n                    {title}{\" \"}\n                    {this.props.isAuthenticated ? (\n                      <>\n                        <Button\n                          className=\"remove-btn float-right\"\n                          color=\"danger\"\n                          size=\"sm\"\n                          onClick={this.onDeleteClick.bind(this, _id)}\n                        >\n                          Delete\n                        </Button>\n                        <Button\n                          className=\"update-btn float-right\"\n                          color=\"success\"\n                          size=\"sm\"\n                          onClick={this.onEditClick.bind(this, _id)}\n                        >\n                          Update\n                        </Button>\n                      </>\n                    ) : null}\n                  </ListGroupItem>\n                  <ListGroupItem className=\"text-white bg-secondary\">\n                    {description_short}\n                  </ListGroupItem>\n                  <ListGroupItem className=\"text-white bg-secondary\">\n                    {description_long}\n                  </ListGroupItem>\n                  <ListGroupItem className=\"text-white bg-secondary\">\n                    {repo_url}\n                  </ListGroupItem>\n                  <ListGroupItem className=\"text-white bg-secondary\">\n                    {url}\n                  </ListGroupItem>\n                </ListGroup>\n              </CSSTransition>\n            )\n          )}\n        </TransitionGroup>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(\n  mapStateToProps,\n  { getapps, deleteapp, updateapp, getapp }\n)(AppList);\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { addapp } from \"../actions/appActions\";\nimport PropTypes from \"prop-types\";\n\nclass AppModal extends Component {\n  state = {\n    modal: false,\n    name: \"\",\n    title: \"\",\n    description_long: \"\",\n    description_short: \"\",\n    url: \"\",\n    repo_url: \"\"\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newApp = {\n      title: this.state.title,\n      description_long: this.state.description_long,\n      description_short: this.state.description_short,\n      url: this.state.url,\n      repo_url: this.state.repo_url\n    };\n\n    // Add app via addapp action\n    this.props.addapp(newApp);\n\n    // Close modal\n    this.toggle();\n  };\n\n  render() {\n    // console.log(this.props);\n    return (\n      <div>\n        {this.props.isAuthenticated ? (\n          <Button\n            color=\"dark\"\n            style={{ marginBottom: \"2rem\" }}\n            onClick={this.toggle}\n          >\n            Add App\n          </Button>\n        ) : (\n          <h4 className=\"mb-3\">Please log in to add, edit, delete apps</h4>\n        )}\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader\n            className=\"text-dark text-center bg-light\"\n            toggle={this.toggle}\n          >\n            Add To App List\n          </ModalHeader>\n          <ModalBody className=\"modalbody\">\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n                <Label for=\"title\">Title</Label>\n                <Input\n                  type=\"text\"\n                  name=\"title\"\n                  id=\"title\"\n                  placeholder=\"Add title\"\n                  onChange={this.onChange}\n                />\n                <Label for=\"description_long\">Description</Label>\n                <Input\n                  type=\"text\"\n                  name=\"description_long\"\n                  id=\"description_long\"\n                  placeholder=\"Add description_long\"\n                  onChange={this.onChange}\n                />\n                <Label for=\"description_short\">Used technologies</Label>\n                <Input\n                  type=\"text\"\n                  name=\"description_short\"\n                  id=\"description_short\"\n                  placeholder=\"Add description_short\"\n                  onChange={this.onChange}\n                />\n                <Label for=\"url\">App Deployment</Label>\n                <Input\n                  type=\"text\"\n                  name=\"url\"\n                  id=\"url\"\n                  placeholder=\"Add url\"\n                  onChange={this.onChange}\n                />\n                <Label for=\"repo_url\">Git repo</Label>\n                <Input\n                  type=\"text\"\n                  name=\"repo_url\"\n                  id=\"repo_url\"\n                  placeholder=\"Add repo_url\"\n                  onChange={this.onChange}\n                />\n                <Button color=\"primary\" style={{ marginTop: \"2rem\" }} block>\n                  Add App\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(\n  mapStateToProps,\n  { addapp }\n)(AppModal);\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { addapp, updateapp, getapp, cancelUpdate } from \"../actions/appActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateModal extends Component {\r\n  state = {\r\n    modal: false,\r\n    _id: \"\",\r\n    title: \"\",\r\n    description_long: \"\",\r\n    description_short: \"\",\r\n    url: \"\",\r\n    repo_url: \"\"\r\n  };\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    isUpdate: PropTypes.bool,\r\n    single_app: PropTypes.object\r\n  };\r\n\r\n  toggle = () => {\r\n    // cancel update, set isUpdate to false\r\n    this.props.cancelUpdate();\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const newApp = {\r\n      _id: this.props.app.single_app._id,\r\n      title: this.state.title,\r\n      description_long: this.state.description_long,\r\n      description_short: this.state.description_short,\r\n      url: this.state.url,\r\n      repo_url: this.state.repo_url\r\n    };\r\n\r\n    // Add app via addapp action\r\n    this.props.updateapp(newApp);\r\n    // console.log(\"new isUpdate\");\r\n    console.log(this.props.app.isUpdate);\r\n\r\n    // Close modal\r\n    this.toggle();\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // Typical usage (don't forget to compare props):\r\n    // only do something if isUpdate is true and props dont change to preven ininite loop\r\n    if (\r\n      this.props.app.isUpdate &&\r\n      this.props.app.isUpdate !== prevProps.app.isUpdate\r\n    ) {\r\n      // console.log(\"is update changed!!!!\");\r\n      this.setState({\r\n        _id: this.props.app.single_app._id,\r\n        title: this.props.app.single_app.title,\r\n        description_long: this.props.app.single_app.description_long,\r\n        description_short: this.props.app.single_app.description_short,\r\n        url: this.props.app.single_app.url,\r\n        repo_url: this.props.app.single_app.repo_url,\r\n        modal: this.props.app.isUpdate\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.props.app.isUpdate) {\r\n      // console.log(this.props.app.single_app);\r\n      return (\r\n        <div>\r\n          <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n            <ModalHeader toggle={this.toggle}>Update App</ModalHeader>\r\n            <ModalBody>\r\n              <Form onSubmit={this.onSubmit}>\r\n                <FormGroup>\r\n                  <Label for=\"title\">Title</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    id=\"title\"\r\n                    value={this.state.title}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <Label for=\"description_long\">Title</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"description_long\"\r\n                    id=\"description_long\"\r\n                    value={this.state.description_long}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <Label for=\"description_short\">Title</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"description_short\"\r\n                    id=\"description_short\"\r\n                    value={this.state.description_short}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <Label for=\"url\">Title</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"url\"\r\n                    id=\"url\"\r\n                    value={this.state.url}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <Label for=\"repo_url\">Title</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"repo_url\"\r\n                    id=\"repo_url\"\r\n                    value={this.state.repo_url}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <Button color=\"success\" style={{ marginTop: \"2rem\" }} block>\r\n                    Update App\r\n                  </Button>\r\n                </FormGroup>\r\n              </Form>\r\n            </ModalBody>\r\n          </Modal>\r\n        </div>\r\n      );\r\n    } else return null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  app: state.app,\r\n  single_app: state.app.single_app,\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addapp, updateapp, getapp, cancelUpdate }\r\n)(UpdateModal);\r\n","import {\n  GET_APPS,\n  GET_APP,\n  ADD_APP,\n  UPDATE_APP,\n  DELETE_APP,\n  APPS_LOADING,\n  GET_ERROR,\n  CANCEL_UPDATE\n} from \"../actions/types\";\n\nconst initialState = {\n  apps: [],\n  loading: false,\n  single_app: null,\n  isUpdate: false,\n  errmsg: \"\"\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_APPS:\n      // console.log(\"get apps was called\");\n      return {\n        ...state,\n        apps: action.payload,\n        loading: false\n      };\n    case GET_APP:\n      // console.log(action.payload);\n      return {\n        ...state,\n        single_app: action.payload,\n        isUpdate: true\n      };\n\n    case UPDATE_APP:\n      return {\n        ...state,\n        apps: state.apps.map(app => {\n          const {\n            _id,\n            title,\n            description_long,\n            description_short,\n            url,\n            repo_url\n          } = action.payload;\n          if (app._id === _id) {\n            app.title = title;\n            app.description_long = description_long;\n            app.description_short = description_short;\n            app.url = url;\n            app.repo_url = repo_url;\n          }\n          return app;\n        }),\n        isUpdate: false\n      };\n    case DELETE_APP:\n      return {\n        ...state,\n        apps: state.apps.filter(app => app._id !== action.payload)\n      };\n    case ADD_APP:\n      return {\n        ...state,\n        apps: [action.payload, ...state.apps]\n      };\n    case APPS_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case CANCEL_UPDATE:\n      return {\n        ...state,\n        isUpdate: false\n      };\n    case GET_ERROR:\n      // console.log(\"the eroor\");\n      // console.log(action.payload);\n      return {\n        ...state,\n        errmsg: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\n\nconst initialState = {\n  msg: {},\n  status: null,\n  id: null\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case CLEAR_ERRORS:\n      return {\n        msg: {},\n        status: null,\n        id: null\n      };\n    default:\n      return state;\n  }\n}","import {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport appReducer from \"./appReducer\";\nimport errorReducer from \"./errorReducer\";\nimport authReducer from \"./authReducer\";\n\nexport default combineReducers({\n  app: appReducer,\n  error: errorReducer,\n  auth: authReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleWare = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(...middleWare))\n);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport AppNavbar from \"./components/AppNavbar\";\nimport AppList from \"./components/AppList\";\nimport AppModal from \"./components/AppModal\";\nimport UpdateModal from \"./components/UpdateModal\";\nimport { Container } from \"reactstrap\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { loadUser } from \"./actions/authActions\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    store.dispatch(loadUser());\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <AppNavbar />\n          <Container>\n            <AppModal />\n            <UpdateModal />\n            <AppList />\n          </Container>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}